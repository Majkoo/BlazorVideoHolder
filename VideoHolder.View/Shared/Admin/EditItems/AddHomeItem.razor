@page "/file-upload-1"

@inject IItemFactory ItemFactory
@inject NotificationService NotificationService


<RadzenTemplateForm Submit="OnSubmit" TItem="CreateItemDto" Data="_createItemDto" class="form">
    <h2 class="h2">Prześlij obrazek lub filmik</h2>

    <div class="mb-4">
        <RadzenLabel Component="Name" Text="Nazwa" />
        <RadzenTextBox style="display: block" Name="Name" @bind-Value="@_createItemDto.Name" Class="w-100"/>
        <RadzenRequiredValidator Component="Name" Text="Nazwa jest wymagana." Style="position: absolute"/>
        <RadzenLengthValidator Component="Name"  Max="128" Text="Nazwa może zawierać maksymalnie 128 znaków." Style="position: absolute" />
    </div>

     <div class="mb-4">
        <RadzenLabel Component="Description" Text="Opis" />
        <RadzenTextArea style="display: block" Name="Description" @bind-Value="@_createItemDto.Description" Class="w-100"/>
        <RadzenRequiredValidator Component="Description" Text="Opis jest wymagany." Style="position: absolute"/>
        <RadzenLengthValidator Component="Description"  Max="128" Text="Opis może zawierać maksymalnie 1024 znaki." Style="position: absolute" />
    </div>

    <div class="mb-4">
        <InputFile OnChange="@LoadFile" />
        @if (_invalidFile)
        {
            <div class="position-absolute">
                <small class="text-danger" style="font-size: 0.75rem;">Nieprawidłowy format pliku.</small>
            </div>
        }
        @if (_fileNotLoaded)
        {
            <div class="position-absolute">
                <small class="text-danger" style="font-size: 0.75rem;">Wybranie pliku jest wymagane.</small>
            </div>
        }

    </div>


    <div class="pt-2">
        <RadzenButton Text="Prześlij" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Secondary"></RadzenButton>
    </div>

    <div class="mt-4 mb-1">
        @if (_progressValue != 0)
        {
            <RadzenProgressBar Value="@_progressValue" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
        }
    </div>

</RadzenTemplateForm>

@code {
    private bool _invalidFile = false;
    private bool _fileNotLoaded = false;
    private int _progressValue = 0;

    CreateItemDto _createItemDto = new();
    IBrowserFile _browserFile;

    private void LoadFile(InputFileChangeEventArgs e)
    {
        _browserFile = null;
        if (e.File.ContentType.StartsWith("image") || e.File.ContentType.StartsWith("video"))
        {
            _invalidFile = false;
            _fileNotLoaded = false;
            _browserFile = e.File;
            return;
        }
        _invalidFile = true;

    }

    async Task OnSubmit()
    {
        if (_browserFile is not null)
        {
            _progressValue = 100;
            var item = await ItemFactory.CreateItem(_createItemDto, _browserFile, ItemOption.Home);
            Thread.Sleep(625);
            _progressValue = 0;
            NotifySuccess(item);
            ClearForm();
            return;
        }
        _fileNotLoaded = true;
    }

    private void ClearForm()
    {
        _createItemDto = new CreateItemDto();
        _browserFile = null;
    }

    private void NotifySuccess(Item item)
    {
        NotificationService.Notify(new NotificationMessage()
        {
            Summary = "Sukces!",
            Detail = $"Pomyślnie umieszczono zasób \"{item.Name}\" na stronie.",
            Duration = 6000,
            Style = "width: fit-content; max-width: 550px;",
            Severity = NotificationSeverity.Success
        });
    }

}